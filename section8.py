"""
1. Не уникальные элементы.

Дано: непустой массив целых чисел.

Задание: нужно получить массив, состоящий только из неуникальных элементов данного массива. Для этого необходимо удалить все уникальные элементы (которые присутствуют в данном массиве только один раз). Для решения этой задачи не меняйте оригинальный порядок элементов. Пример: [1, 2, 3, 1, 3], где 1 и 3 неуникальные элементы и результат будет [1, 3, 1, 3].

Пример:
 [1, 2, 3, 1, 3], результат: [1, 3, 1, 3]
 [1, 2, 3, 4, 5], результат: []
 [5, 5, 5, 5, 5], результат: [5, 5, 5, 5, 5]
 [10, 9, 10, 10, 9, 8], результат: [10, 9, 10, 10, 9]

"""

elements = [10, 9, 10, 10, 9, 8]
elements_without_unique = [element for element in elements if elements.count(element) > 1]
print(f"{elements}, Результат: {elements_without_unique}")


"""
Дано: x, y, z, n.

Задание: нужно получить список всех возможных перестановок чисел x, y, z, где x + y + z != n.

Пример:
x = 0 y = 0 z = 1
n = 2, результат: [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]
"""

x = 0 
y = 0
z = 1 
n = 2



"""
Дано: n.

Задание: нужно получить список "удвоенных" нечетных чисел от 0 до n.

Пример:
n = 5, результат: [2, 6]

"""

n = 7
double_array = [element * 2 for element in range(n) if element % 2 != 0]
print(f"n = {n}, Результат: {double_array}")

"""

Дано: степень прозрачности, как целое число.

Задание. У Николы появилось свободное время и он решил заняться исследованием привидений. 
Он хочет найти способ, как определять возраст привидений. 
Согласно древним фолиантам, возраст связан со степенью прозрачности призраков. 
Никола составил шкалу измерений прозрачности от 10000 до 0, где 10000 - это совсем не прозрачное "новорождённое" 
привидение (0 лет) и 0 - это уже невидимка (возраст неизвестен).

После множества экспериментов, Никола кажется начел взаимосвязь. На каждый "день рождения", степень прозрачности привидения уменьшается на количество единиц, равное его возрасту, если возраст есть одно из чисел Фибоначчи (подробней здесь), иначе увеличивается на единицу.

Для примера: "Новорождённое" привидение -- 10000 единиц прозрачности.

1 год -- 10000 - 1 = 9999 (1 число Фибоначчи).

2 года -- 9999 - 2 = 9997 (2 число Фибоначчи).

3 года -- 9997 - 3 = 9994 (3 число Фибоначчи).

4 года -- 9994 + 1 = 9995 (4 не число Фибоначчи).

5 лет -- 9995 - 5 = 9990 (5 число Фибоначчи). 
Помогите Николе написать функцию, которая будет определять возраст привидения по прозрачности. 
Вам известно измерение прозрачности, как число от 0 до 10000 включительно. Привидения не бывают старше 5000 лет, так как потом просто исчезают (серьезно, научный факт).
"""
def Calc_age_ghost(transparency):
    Fibonachi_numbers = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946]
    age = 0
    while(transparency > 0):
             
        return 


Trans = 12

print(Calc_age_ghost(Trans)) 